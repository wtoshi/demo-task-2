worker_processes auto;

events {
    worker_connections 1024;
}

http {
    # Güvenlik başlıkları (Opsiyonel)
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";

    server {
        listen 5000;

        # auth-service için yapılandırma
        location /auth/ {
            proxy_pass http://auth-service:5001;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # CORS başlıkları
            # add_header 'Access-Control-Allow-Origin' '*' always;
            # add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            # add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;

            # OPTIONS istekleri
            # if ($request_method = 'OPTIONS') {
            #     return 204;
            # }
        }

        # user-service için yapılandırma
        location /user/ {
            proxy_pass http://user-service:5002;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # CORS başlıkları
            # add_header 'Access-Control-Allow-Origin' '*' always;
            # add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            # add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;

            # OPTIONS istekleri
            # if ($request_method = 'OPTIONS') {
            #     return 204;
            # }
        }

        # flight-service için yapılandırma
        location /flight/ {
            proxy_pass http://flight-service:5003;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # CORS başlıkları
            # add_header 'Access-Control-Allow-Origin' '*' always;
            # add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            # add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;

            # OPTIONS istekleri
            # if ($request_method = 'OPTIONS') {
            #     return 204;
            # }
        }

        # Hata yönetimi
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }

        # Loglama
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;
    }
}
